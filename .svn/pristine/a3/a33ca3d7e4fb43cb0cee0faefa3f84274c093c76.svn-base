//
//  CMSliderBrowseController.m
//  MLPlayer
//
//  Created by hushengwu on 14-6-11.
//  Copyright (c) 2014年 w. All rights reserved.
//

#import "CMSliderBrowseController.h"
#import "CMBrowserControl.h"
#import "CMSearchHotControl.h"
#import "CMGetNewControl.h"
#import "cmmyinfo.h"
#import "SDWebImage/UIButton+WebCache.h"
#import "CMMainControl.h"
//#import "MMDrawerController.h"
//#import "UIViewController+MMDrawerController.h"
//#import "MMDrawerController+Subclass.h"
//#import "CMGetRecommendControl.h"

#define degreesToRadians(degrees) (M_PI * degrees / 180.0)


class CMSliderShakeUpdateListener;
class CMSliderShakeUpdateListener: public IMUpdateDataListener
{
    virtual void OnUpdateDataProgress(void* UserData, int nPercent)
    {
        
    }
    
    virtual void OnUpdateDataFinish(void* UserData, int Result)
    {
        CMSliderBrowseController *browser = (__bridge CMSliderBrowseController*)UserData;
        if (Result == TResult::ESuccess || Result == TResult::ENothing)
        {
            [browser shakeToDetail];
        }else
        {
            [browser performSelector:@selector(shakeDown)];
            
            
        }
    }
};


@interface CMSliderBrowseController (){
    CMSliderShakeUpdateListener       * m_pShakeListener;
    CMShake                     * m_pShake;
    
    MLPlayerAppDelegate *appDelegate;

}

@end

@implementation CMSliderBrowseController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

-(void)gotoSearch
{
    if (![self.subscribeView isHidden]){
        [self CloseAnimaon];
        viewCounts = m_pCategoryItem->SelectedChildItemCount();
        [_slideSwitchView reloadData];
        
        WEAKSELF;
        [UIView animateWithDuration:0.4 animations:^
         {
             STRONGSELF;
             [sself.subscribeView setFrame:CGRectMake(0, 64 + 37, UI_IOS_WINDOW_WIDTH, 1)];
         } completion:^(BOOL finished)
         {
             STRONGSELF;
           //  sself.coverView.alpha = 0;
             
             [sself.subscribeView setHidden:YES];
            // [sself.coverView setHidden:YES];
             [sself.subscribeView removeFromSuperview];
             
             [sself.slideSwitchView.rigthSideButton setEnabled:YES];
         }];
        return;
    }

	CMSearchHotControl* searchControl = [[CMSearchHotControl alloc] init];
//	SliderNavigationViewController.navigationBarHidden = NO;
    searchControl.hidesBottomBarWhenPushed = YES;
	[searchControl.navigationItem setTitle:I(@"搜索")];
	searchControl.flag = [NSString stringWithUTF8String:m_sFlag];
	[[self navigationController] pushViewController:searchControl animated:YES];
    CMRELEASE(searchControl);
}


-(void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    [self becomeFirstResponder];
//    NSUserDefaults *ud = [NSUserDefaults standardUserDefaults];
//    NSString *openpush = [ud objectForKey:kUDOpenPush];
//    if([openpush isEqualToString:@"1"]) {
//        
//        NSString *type = [ud objectForKey:kUDPushType];
//        NSString *sid = [ud objectForKey:kUDPushID];
//        
//        CMGetNewControl*  browserControl=[[CMGetNewControl alloc] init];
//        browserControl.title = I(@"最新推送");
//        
//        browserControl.bAppStateIsBackground = YES;
//        browserControl.sType = type;
//        browserControl.sId = sid;
//        [self.navigationController pushViewController:browserControl animated:NO];
//        CMRELEASE(browserControl);
//    }
//    [ud removeObjectForKey:kUDOpenPush]; //即时关闭判断，避免页面跳转错乱
}

-(BOOL)canBecomeFirstResponder{
    return YES;
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self becomeFirstResponder];

    //[self.mm_drawerController setOpenDrawerGestureModeMask:MMOpenDrawerGestureModeAll];
    //[self.mm_drawerController setCloseDrawerGestureModeMask:MMCloseDrawerGestureModeAll];
    
    if ([self.slideSwitchView.viewArray count] > 0 && self.viewIndex >= 0 && self.viewIndex < m_pCategoryItem->ChildItemCount()) {
        CMBrowserControl *cTrl = [self.slideSwitchView.viewArray objectAtIndex:self.viewIndex];
        [cTrl reloadTableViewList];
    }

}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [self resignFirstResponder];

    //[self.mm_drawerController setOpenDrawerGestureModeMask:MMOpenDrawerGestureModeNone];
    //[self.mm_drawerController setCloseDrawerGestureModeMask:MMCloseDrawerGestureModeNone];
    
}

- (void)loadShakeDate
{
    if (!m_pShakeListener)
    {
        m_pShakeListener = new  CMSliderShakeUpdateListener();
    }
    
    if (m_pShake == NULL)
    {
        m_pShake = new CMShake(m_pShakeListener);
        m_pShake->SetUserData((__bridge void*)self);
    }
    
    m_pShake->SetListener(m_pShakeListener, NULL);
    m_pShake->SetUserData((__bridge void*)self);
    
    
    m_pShake->Request();
}

- (void)shakeToDetail
{
    [self performSelector:@selector(shakeDown)];
    
    TBrowserItem* item = NULL;
    
    if(m_pShake->GetItemModel(0)==0)
    {
        item = new TClassItem();
    }
    else
    {
        item = new TCoursewareItem();
        
    }
    
    
    m_pShake->GetItem(0, item);
    
    
    CMShakeListController *shakeController=[[CMShakeListController alloc]init];
    shakeController->m_pShake=m_pShake;
    shakeController.title = I(@"您摇到的课程");
    
    [shakeController setHidesBottomBarWhenPushed:YES];
    [self.navigationController pushViewController:shakeController animated:YES ];
    
    SAFEDELETE(item);
    
    CMRELEASE(shakeController);
    
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.titleLabel.text = self.navigationItem.title;
    
    self.navigationItem.leftBarButtonItem = nil;
    
    NSString *sFlag = [NSString stringWithUTF8String:m_sFlag];
    
    if ([sFlag isEqualToString:@"course"]) {
        
        [[NSNotificationCenter defaultCenter]  addObserver:self selector:@selector (enableScrollview) name:LeftVcFinishMove object:nil];
        
        self.leftButton = [UIButton buttonWithType:UIButtonTypeCustom];
        self.leftButton.frame = CGRectMake(0, 0.0, 28, 28);
        
        [self.leftButton sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithUTF8String:CMMyInfo::GetInstance()->GetHeadimage()]] forState:UIControlStateNormal placeholderImage:[UIImage imageNamed:@"user_img_small_left"]];
        self.leftButton.layer.masksToBounds = YES;
        self.leftButton.layer.cornerRadius = 14;
        
        [self.leftButton addTarget:self action:@selector(leftClickAction) forControlEvents:UIControlEventTouchUpInside];
        [self.leftButton setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        UIBarButtonItem *leftBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:self.leftButton];
        self.navigationItem.leftBarButtonItem = leftBarButtonItem;
        
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(updateLeftHeadImage) name:CM_NotificationCenter_HeadImageUpdate object:nil];
        
    }

    
//    UIButton *leftButton = [UIButton buttonWithType:UIButtonTypeCustom];
//    leftButton.frame = CGRectMake(0, 0.0, 44, 44);
//    leftButton.imageEdgeInsets = [self itemFitDifferentVersion:YES];
//    [leftButton setImage:[UIImage imageNamed:@"button_icon"] forState:UIControlStateNormal];
//	[leftButton addTarget:self action:@selector(leftClickAction) forControlEvents:UIControlEventTouchUpInside];
//    [leftButton setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
//    UIBarButtonItem *leftBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:leftButton];
//    self.navigationItem.leftBarButtonItem = leftBarButtonItem;
    
    self.slideSwitchView.tabItemNormalColor = [QCSlideSwitchView colorFromHexRGB:@"0x676767"];
    self.slideSwitchView.tabItemSelectedColor = [QCSlideSwitchView colorFromHexRGB:@"0x0092DD"];
    self.slideSwitchView.shadowImage = [[UIImage imageNamed:@"blue_line_and_shadow"]
                                        stretchableImageWithLeftCapWidth:59.0f topCapHeight:0.0f];
    
//    CGRect rect=CGRectMake(0.0f, 0.0f, 90.0f, 37.0f);
//    UIGraphicsBeginImageContext(rect.size);
//    CGContextRef context = UIGraphicsGetCurrentContext();
//    CGContextSetFillColorWithColor(context, [kColorForeground CGColor]);
//    CGContextFillRect(context, rect);
//    UIImage*theImage = UIGraphicsGetImageFromCurrentImageContext();
//    UIGraphicsEndImageContext();
//    
//    self.slideSwitchView.shadowImage = [theImage stretchableImageWithLeftCapWidth:59.0f topCapHeight:0.0f];
    
    UIButton *rightSideButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [rightSideButton setImage:[UIImage imageNamed:@"arrow"] forState:UIControlStateNormal];
    rightSideButton.frame = CGRectMake(0, 0, 37.0, 37.0);
    self.slideSwitchView.rigthSideButton = rightSideButton;
    
    [rightSideButton addTarget:self action:@selector(showSubscribeView:) forControlEvents:UIControlEventTouchUpInside];
    
    if ([self respondsToSelector:@selector(setEdgesForExtendedLayout:)]) {
        self.edgesForExtendedLayout=UIRectEdgeNone;
    }
    //搜索
	UIButton *searchBtn = [UIButton buttonWithType:UIButtonTypeCustom];
	searchBtn.frame = CGRectMake(0, 0, kBarItemWidth, kBarItemHeight);
    searchBtn.imageEdgeInsets = [self itemFitDifferentVersion:NO];
	[searchBtn setImage:[UIImage imageNamed:@"NavSearch"] forState:UIControlStateNormal];
	[searchBtn addTarget:self action:@selector(gotoSearch) forControlEvents:UIControlEventTouchUpInside];
	
	UIBarButtonItem *searchBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:searchBtn];
    if (!CMGlobal::TheOne().IsOffline())
    {
        self.navigationItem.rightBarButtonItem = searchBarButtonItem;
    }
    CMRELEASE(searchBarButtonItem);
    
    if (CMGlobal::TheOne().IsOffline()) {
        self.navigationItem.rightBarButtonItem=nil;
    }
    
    appDelegate = (MLPlayerAppDelegate*)[UIApplication sharedApplication].delegate;

	
    if(strlen(m_sFlag) <= 0)
        return;
    
    m_pCategoryItem = [self GetCategory:m_sFlag];
    if(!m_pCategoryItem)
        return;

    [self.slideSwitchView setCategoryItem:m_pCategoryItem];
    
    viewCounts = m_pCategoryItem->SelectedChildItemCount();
    [self.slideSwitchView buildUI];
    self.viewIndex = 0;
    
    self.subscribeView = [[CMSubscribeView alloc] initWithFrame:CGRectMake(0, 64 + 37, UI_IOS_WINDOW_WIDTH, 0) CMCategoryItem:m_pCategoryItem];
    self.subscribeView.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"learn_subscribe_bg"]];
    [self.subscribeView setHidden:YES];
    [self.subscribeView.blankButton addTarget:self action:@selector(showSubscribeView:) forControlEvents:UIControlEventTouchUpInside];
    
    //[self createCoverView];
    
    NSString *strAudio = [[NSBundle mainBundle] pathForResource:@"glass" ofType:@"wav"];
    AudioServicesCreateSystemSoundID((__bridge CFURLRef)[NSURL URLWithString:strAudio], &sysSoundID);
    
    
    UIImageView *pImgUp = [[UIImageView alloc] initWithFrame:CGRectMake((UI_IOS_WINDOW_WIDTH-125)/2, UI_IOS_WINDOW_HEIGHT/2-100, 125, 100)];
    pImgUp.backgroundColor = [UIColor clearColor];
    pImgUp.image = [UIImage imageNamed:@"shakeup"];
    
    m_pImgUp = [[UIView alloc] initWithFrame:CGRectMake(0, -UI_IOS_WINDOW_HEIGHT/2, UI_IOS_WINDOW_WIDTH, UI_IOS_WINDOW_HEIGHT/2)];
    m_pImgUp.backgroundColor = [UIColor colorWithRed:38/255.0 green:38/255.0 blue:38/255.0 alpha:1.0];
    [m_pImgUp addSubview:pImgUp];
    [appDelegate.window addSubview:m_pImgUp];
    
    UIImageView *pImgDown = [[UIImageView alloc] initWithFrame:CGRectMake((UI_IOS_WINDOW_WIDTH-125)/2, 0, 125, 100)];
    pImgDown.backgroundColor = [UIColor clearColor];
    pImgDown.image = [UIImage imageNamed:@"shakedown"];
    
    m_pImgDown = [[UIView alloc] initWithFrame:CGRectMake(0, UI_IOS_WINDOW_HEIGHT, UI_IOS_WINDOW_WIDTH, UI_IOS_WINDOW_HEIGHT/2)];
    m_pImgDown.backgroundColor = [UIColor colorWithRed:38/255.0 green:38/255.0 blue:38/255.0 alpha:1.0];
    [m_pImgDown addSubview:pImgDown];
    [appDelegate.window addSubview:m_pImgDown];
    CMRELEASE(pImgUp);
    CMRELEASE(pImgDown);
    
    upImgHidden = YES;
    downImgHidden = YES;
    animationDone = YES;
    
    //CMGetRecommendControl *RECOMMEND=[[CMGetRecommendControl alloc]init];
    //[self.navigationController pushViewController:RECOMMEND animated:NO];
    //[appDelegate.window addSubview:RECOMMEND.view];
    //self.navigationController.navigationBarHidden=YES;
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(updateCategory) name:CM_NotificationCenter_ReloadCategory object:nil];
}

- (void)updateCategory{
    
    m_pCategoryItem = [self GetCategory:m_sFlag];
    [self.slideSwitchView setCategoryItem:m_pCategoryItem];
    [self.slideSwitchView reloadData];
}

- (void)updateLeftHeadImage{
    [self.leftButton sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithUTF8String:CMMyInfo::GetInstance()->GetHeadimage()]] forState:UIControlStateNormal placeholderImage:[UIImage imageNamed:@"user_img_small_left"]];
}

- (void)leftClickAction{
    [(CMMainControl*)self.tabBarController openSideBar];
}

- (void)enableScrollview{
    [CMMainControlHandler isForbidGesture:YES];
}

-(CMCategoryItem*)GetCategory:(const char*)stype
{
	if(!stype)
		return NULL;
	//查找分类
	CMCategory *pCategory = CMCategory::GetInstance();
	CMCategoryItem* pItem = NULL;
	for(int i= 0; i<pCategory->TopItemCount(); i++)
	{
		pItem = pCategory->GetTopItem(i);
        if(pItem!=NULL)
            if( _stricmp(pItem->sType,stype) == 0)
                return pItem;
	}
	return NULL;
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)setFlag:(const char*)sflag
{
	if(sflag)
        utf8ncpy(m_sFlag,sflag, 15);
}

#pragma mark ---cover view
//- (void)createCoverView{
//    self.coverView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, UI_IOS_WINDOW_WIDTH - 32, 37)];
//    self.coverView.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"comm_tab_background"]];
//    [self.slideSwitchView insertSubview:self.coverView atIndex:2];
//    
//    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(15, 0, 250, 37)];
//    label.backgroundColor = [UIColor clearColor];
//    label.font = [UIFont systemFontOfSize:14];
//    label.textColor = [UIColor blackColor];
//    label.text = I(@"点击添加订阅栏目（蓝色代表已订阅）");
//    [self.coverView addSubview:label];
//    
//    self.coverView.alpha = 0;
//    self.coverView.hidden = YES;
//}

- (void)OpenAnimaon{
    [UIView beginAnimations:@"rotate" context:nil];
    [UIView setAnimationDuration:0.3];
    self.slideSwitchView.rigthSideButton.transform = CGAffineTransformMakeRotation(degreesToRadians(-180));
    [UIView commitAnimations];
}
- (void)CloseAnimaon{
    [UIView beginAnimations:@"rotate" context:nil];
    [UIView setAnimationDuration:0.3];
    CGAffineTransform oriT = CGAffineTransformIdentity;

    self.slideSwitchView.rigthSideButton.transform = CGAffineTransformMakeRotation(degreesToRadians(-0.0));
    [UIView commitAnimations];
}

#pragma mark ---订阅View
- (void)showSubscribeView:(UIButton *)btn{
    
    [btn setEnabled:NO];
    WEAKSELF;
    if ([self.subscribeView isHidden] == YES)
    {
        [self.subscribeView setHidden:NO];
        //[self.coverView setHidden:NO];
        [self OpenAnimaon];
        [self.tabBarController.view addSubview:self.subscribeView];

        
        [UIView animateWithDuration:0.4 animations:^
         {
             STRONGSELF;
            // sself.coverView.alpha = 1;
             [sself.subscribeView setCMSubscribeViewFrame:CGRectMake(0, 64 + 37, UI_IOS_WINDOW_WIDTH, UI_IOS_WINDOW_HEIGHT - 64 - 37)];
         } completion:^(BOOL finished)
         {
             [btn setEnabled:YES];
         }];
    }else
    {
        [self CloseAnimaon];
        viewCounts = m_pCategoryItem->SelectedChildItemCount();
        [_slideSwitchView reloadData];
        [UIView animateWithDuration:0.4 animations:^
         {
             STRONGSELF;
             [sself.subscribeView setCMSubscribeViewFrame:CGRectMake(0, 64 + 37, UI_IOS_WINDOW_WIDTH, 1)];
             
         } completion:^(BOOL finished)
         {
             STRONGSELF;
             //sself.coverView.alpha = 0;

             [sself.subscribeView setHidden:YES];
             //[sself.coverView setHidden:YES];
             [sself.subscribeView removeFromSuperview];
             [btn setEnabled:YES];

         }];

    }

}


#pragma mark - shake

- (void)motionBegan:(UIEventSubtype)motion withEvent:(UIEvent *)event
{
    [self removeGuideView];
    
    if (strcmp(m_sFlag, "course") == 0
        && !CMGlobal::TheOne().IsOffline()
        && animationDone
        &&  SETTING.GetShake())
    {
        if (motion == UIEventSubtypeMotionShake)
        {
            [UIView transitionWithView:m_pImgUp
                              duration:0.5f
                               options:UIViewAnimationOptionCurveEaseInOut
                            animations:^{
                                CGRect upframe = m_pImgUp.frame;
                                while (upframe.origin.y <= -1)
                                {
                                    upframe.origin.y += 1;
                                }
                                m_pImgUp.frame = upframe;
                            }
                            completion:^(BOOL finished) {
                                upImgHidden = NO;
                                
                                if (!downImgHidden)
                                {
                                    [self performSelector:@selector(reset) withObject:nil afterDelay:0.3];
                                }
                            }];
            
            [UIView transitionWithView:m_pImgDown
                              duration:0.5f
                               options:UIViewAnimationOptionCurveEaseInOut
                            animations:^{
                                CGRect downframe = m_pImgDown.frame;
                                while (downframe.origin.y >= (UI_IOS_WINDOW_HEIGHT/2+1))
                                {
                                    downframe.origin.y -= 1;
                                }
                                m_pImgDown.frame = downframe;
                            }
                            completion:^(BOOL finished) {
                                downImgHidden = NO;
                                
                                if (!upImgHidden)
                                {
                                    [self performSelector:@selector(reset) withObject:nil afterDelay:0.3];
                                }
                            }];
        }
    }
}

- (void)motionCancelled:(UIEventSubtype)motion withEvent:(UIEvent *)event
{
    if (motion == UIEventSubtypeMotionShake)
    {
        [self removeGuideView];
        [self performSelector:@selector(reset) withObject:nil afterDelay:0.3];
    }
}

- (void)motionEnded:(UIEventSubtype)motion withEvent:(UIEvent *)event
{
    if (motion == UIEventSubtypeMotionShake)
    {
        [self removeGuideView];
        [self performSelector:@selector(reset) withObject:nil afterDelay:0.3];
    }
}

- (void)reset
{
    if (!upImgHidden && !downImgHidden)
    {
        AudioServicesPlaySystemSound(sysSoundID);
        AudioServicesPlaySystemSound(kSystemSoundID_Vibrate);
        
        [self loadShakeDate];
        animationDone = NO;
        
        [UIView transitionWithView:m_pImgUp
                          duration:0.5f
                           options:UIViewAnimationOptionCurveEaseInOut
                        animations:^{
                            CGRect upframe = m_pImgUp.frame;
                            while (upframe.origin.y >= -(UI_IOS_WINDOW_HEIGHT/2 -1))
                            {
                                upframe.origin.y -= 1;
                            }
                            m_pImgUp.frame = upframe;
                            upImgHidden = YES;
                        }
                        completion:^(BOOL finished) {
                        }];
        
        [UIView transitionWithView:m_pImgDown
                          duration:0.5f
                           options:UIViewAnimationOptionCurveEaseInOut
                        animations:^{
                            CGRect downframe = m_pImgDown.frame;
                            while (downframe.origin.y <= UI_IOS_WINDOW_HEIGHT-1)
                            {
                                downframe.origin.y += 1;
                            }
                            m_pImgDown.frame = downframe;
                            downImgHidden = YES;
                        }
                        completion:^(BOOL finished) {
                            
                        }];
    }
}

- (void)shakeDown
{
    animationDone = YES;
}

- (void)removeGuideView {
    
    UIView *showView = [AppDelegate.window viewWithTag:5201314];
    if ( showView ) {
        [[AppDelegate.window viewWithTag:5201314] removeFromSuperview ];
    }
}

#pragma mark - 滑动tab视图代理方法

- (NSUInteger)numberOfTab:(QCSlideSwitchView *)view
{
    // you can set the best you can do it ;
    if(!m_pCategoryItem)
		return 0;
   
    return m_pCategoryItem->SelectedChildItemCount();
}

- (UIViewController *)slideSwitchView:(QCSlideSwitchView *)view viewOfTab:(NSUInteger)number
{
    CMCategoryItem* m_pCategoryChildItem = m_pCategoryItem->GetSelectedChildItem(number);
    assert(m_pCategoryChildItem);
    NSString *strTitle_ = [NSString stringWithUTF8String:m_pCategoryChildItem->sTitle];
    CMBrowserControl *browserController = [[CMBrowserControl alloc]init];
    browserController.title = strTitle_;
    browserController.bIsShowTabbar = self.bIsShowTabbar;
    browserController.bIsShowTagbar = self.bIsShowTagbar;
    [browserController setFlag:m_sFlag];
    [browserController setCurrentPos:number];
    browserController.navigationControllerDelegate = self;

    if (browserController) {
        return browserController;
    }
    return nil;
}

- (void)slideSwitchView:(CMBrowserControl *)browserControler didselectTab:(NSUInteger)number
{
    self.viewIndex=number;

    if (browserControler && (NSNull*)browserControler != [NSNull null]) {
        [browserControler autoRefresh];
    }

    [[NSNotificationCenter defaultCenter]postNotificationName:@"LeftVcFinishMoved" object:nil];
    
//    if (number == 0 && [[NSString stringWithUTF8String:m_sFlag] isEqualToString:@"course"]) {
//        
//        [CMMainControlHandler isForbidGesture:NO];
//    }
}

- (void)slideSwitchView:(QCSlideSwitchView *)view panLeftEdge:(UIPanGestureRecognizer *)panParam
{
    if(self.viewIndex!=0)
        return;

    //MMDrawerController *drawerController = (MMDrawerController *)self.navigationController.mm_drawerController;
    //[drawerController panGestureCallback:panParam];
    
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

- (void)scrollToTop{
    if (self.slideSwitchView != nil && [self.slideSwitchView respondsToSelector:@selector(scrollToTop)]) {
        [self.slideSwitchView scrollToTop];
    }
}

//- (void)stopScrolling{
//    if (self.slideSwitchView != nil && [self.slideSwitchView respondsToSelector:@selector(stopScrolling)]) {
//        [self.slideSwitchView stopScrolling];
//    }
//}

@end
